<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <!--If you are willing to use Windows/MacOS native APIs you will need to create 3 projects.
        One for Windows with net9.0-windows TFM, one for MacOS with net9.0-macos and one with net9.0 TFM for Linux.-->
        <TargetFramework>net9.0</TargetFramework>
        <Nullable>enable</Nullable>
        <BuiltInComInteropSupport>true</BuiltInComInteropSupport>

        <!-- 单文件发布 -->
        <PublishSingleFile>true</PublishSingleFile>
        <!-- 自包含运行时 -->
        <SelfContained>true</SelfContained>
        <!-- 运行时标识符（Windows x64） -->
        <RuntimeIdentifier>win-x64</RuntimeIdentifier>
        <!-- 包含本地库用于自我提取 -->
        <IncludeNativeLibrariesForSelfExtract>true</IncludeNativeLibrariesForSelfExtract>
        <!-- 剪裁模式 -->
        <TrimMode>link</TrimMode>
        <!-- 启用压缩以减小单文件大小 -->
        <EnableCompressionInSingleFile>true</EnableCompressionInSingleFile>
        
    </PropertyGroup>

    <PropertyGroup>
        <ApplicationManifest>app.manifest</ApplicationManifest>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Avalonia.Desktop"/>
        <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
        <PackageReference Include="Avalonia.Diagnostics">
            <IncludeAssets Condition="'$(Configuration)' != 'Debug'">None</IncludeAssets>
            <PrivateAssets Condition="'$(Configuration)' != 'Debug'">All</PrivateAssets>
        </PackageReference>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\AIlable\AIlable.csproj"/>
    </ItemGroup>
</Project>
